# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OGVxeLYKTJu6d9G65uaQjf4ajKylCpKV
"""

#Dependencies
import pandas as pd
import numpy as np
#sklearn is the ML libraray and linear_model help to use linear regression
#clause -well fit in the training data and is not applicable when data is not linear
from sklearn import linear_model
from sklearn.model_selection import train_test_split

#Loading and printing of the Boston Housing Dataset
from sklearn.datasets import load_boston
boston = load_boston()
print(boston)

# Transform the dataset into dataframes
# data = independent variable x values
# feature_names = column name of data
# target = dependent variable y values

dataframe_x = pd.DataFrame(boston.data, columns=boston.feature_names)
dataframe_y = pd.DataFrame(boston.target)

# Extra finding statistics from the dataset like mean, count
dataframe_x.describe()

#Initializing the linear regression model
lreg = linear_model.LinearRegression()

#spiliting the test and training data
x_train, x_test, y_train, y_test = train_test_split(dataframe_x,dataframe_y,test_size=0.33,random_state=42)

#  training data with our training data
lreg.fit(x_train, y_train)

#print the coefficient for the feature
print(lreg.coef_)

#print the prediction on our test data
y_predict = lreg.predict(x_test)
print(y_predict)

#Actual value of the data
print(y_test)

#Checking performance using Mean squared Error
print(np.mean((y_predict - y_test)**2))

#Checking performance using sklearn.matrics
from sklearn.metrics import mean_squared_error
print(mean_squared_error(y_test,y_predict))